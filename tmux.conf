#
# use ctrl-a instead of ctrl-b to initial tmux commands # unbind C-b
set -g prefix C-g

# ensure 256 color for tmux to work better with vim/airline
set -g default-terminal "screen-256color"

# switch to last active window with C-a C-a
bind-key C-a last-window

# status bar
set -g status-bg black
set -g status-fg white
set -g status-left '#[fg=green]#H'

# set pane colors
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow


set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold


# mouse support
setw -g mode-mouse off
set -g mouse-select-pane off
set -g mouse-resize-pane off
set -g mouse-select-window off



# start window number at 1 instead of 0
set -g base-index 1

# prevent lag with 0 escape sequence
set -s escape-time 0

# increase history
set-option -g history-limit 10000

# bing pipe and dash for horizontal and vertical splits
bind-key | split-window -h
bind-key - split-window

set -g status on


# vi-like select/copy/paste
set-window-option -g mode-keys vi
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection


# set command/message line
set -g message-fg white
set -g message-bg black
set -g message-attr bright


# Smart pane switching with awareness of vim splits (require vim-tmux-navigator plugin)
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

